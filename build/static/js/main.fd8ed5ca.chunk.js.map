{"version":3,"sources":["logo.svg","profile_card.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","profileImage","width","height","borderRadius","content","justifyContent","textAlign","details","marginTop","about","margin","alignItems","MediaCard","classes","useState","name","setName","username","setUsername","followers","setFollowers","following","setFollowing","avatar","setAvatar","location","setLocation","blog","setBlog","id","setId","useEffect","fetch","then","res","json","data","setData","login","avatar_url","style","display","padding","Card","className","Fragment","container","alt","src","Typography","component","variant","Button","size","fullWidth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,wHCUTA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,aAAc,CACZC,MAAO,QACPC,OAAQ,QACRC,aAAc,SAEhBC,QAAS,CACPC,eAAgB,OAChBC,UAAW,QAEbC,QAAS,CACPC,UAAW,SAEbC,MAAO,CACLC,OAAQ,SACRC,WAAY,OACZL,UAAW,UAIA,SAASM,IACtB,IAAMC,EAAUjB,IAEhB,EAAqBkB,mBAAS,IAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA+BJ,mBAAS,IAAxC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA+BN,mBAAS,IAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAyBR,mBAAS,IAAlC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA6BV,mBAAS,IAAtC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAAqBZ,mBAAS,IAA9B,mBAAOa,EAAP,KAAYC,EAAZ,KACA,EAAiBd,mBAAS,IAA1B,mBAAOe,EAAP,KAAUC,EAAV,KAEAC,qBAAU,WACNC,MAAM,yCACHC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJC,EAAQD,QAEZ,IACJ,IAAMC,EAAQ,SAAC,GASV,IARHtB,EAQE,EARFA,KACAuB,EAOE,EAPFA,MACAnB,EAME,EANFA,UACAE,EAKE,EALFA,UACAkB,EAIE,EAJFA,WACAd,EAGE,EAHFA,SACAE,EAEE,EAFFA,KACAE,EACE,EADFA,GAEAb,EAAQD,GACRG,EAAYoB,GACZlB,EAAaD,GACbG,EAAaD,GACbG,EAAUe,GACVb,EAAYD,GACZG,EAAQD,GACRG,EAAMD,IAGR,OACE,qBAAKW,MAAO,CAAEC,QAAQ,OAAQpC,eAAe,SAAUqC,QAAQ,GAA/D,SACA,cAACC,EAAA,EAAD,CAAMC,UAAW/B,EAAQf,KAAzB,SACE,cAAC,IAAM+C,SAAP,UACA,sBAAKC,WAAS,EAAd,UACE,qBACEF,UAAW/B,EAAQb,aACnB+C,IAAI,SACJC,IAAKzB,IAEP,sBAAKqB,UAAW/B,EAAQT,QAAxB,UACE,cAAC6C,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SACGpC,IAEH,4BAAIE,IACJ,cAACmC,EAAA,EAAD,CAAQD,QAAQ,WAAWE,KAAK,QAAQC,WAAS,EAAjD,0BAGA,qBAAKV,UAAW/B,EAAQN,QAAxB,SACE,8BACA,uBACA,cAAC,IAAD,IAFA,OAEsDY,EAFtD,sBAEiFE,EAFjF,qBAKF,qBAAKuB,UAAW/B,EAAQJ,MAAxB,SACE,8BACE,cAAC,IAAD,IADF,OAC0DgB,EACxD,uBACA,cAAC,IAAD,IAHF,OAG8BE,EAC5B,uBACA,cAAC,IAAD,IALF,OAKkCE,mBCvF/B0B,MAVf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,8BACIhC,SCGK4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fd8ed5ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\nimport PeopleAltOutlinedIcon from '@material-ui/icons/PeopleAltOutlined';\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  profileImage: {\n    width: \"210px\",\n    height: \"210px\",\n    borderRadius: \"999em\"\n  },\n  content: {\n    justifyContent: \"left\",\n    textAlign: \"left\"\n  },\n  details: {\n    marginTop: \"-20px\"\n  },\n  about: {\n    margin: \"10px 0\",\n    alignItems: \"left\",\n    textAlign: \"left\"\n  }\n});\n\nexport default function MediaCard() {\n  const classes = useStyles();\n\n  const [name,setName]=useState('');\n  const [username,setUsername]=useState('');\n  const [followers,setFollowers]=useState('');\n  const [following,setFollowing]=useState('');\n  const [avatar,setAvatar]=useState('');\n  const [location,setLocation]=useState('');\n  const [blog,setBlog]=useState('');\n  const [id,setId]=useState('');\n  \n  useEffect(()=>{\n      fetch('https://api.github.com/users/Huang-23')\n        .then(res=>res.json())\n        .then(data=>{\n          setData(data)\n        });\n    },[]);\n  const setData=({\n    name,\n    login,\n    followers,\n    following,\n    avatar_url,\n    location,\n    blog,\n    id\n  })=>{\n    setName(name);\n    setUsername(login);\n    setFollowers(followers);\n    setFollowing(following);\n    setAvatar(avatar_url);\n    setLocation(location);\n    setBlog(blog);\n    setId(id);\n  };\n\n  return (\n    <div style={{ display:'flex', justifyContent:'center', padding:5}}> \n    <Card className={classes.root}>\n      <React.Fragment>\n      <div container>\n        <img\n          className={classes.profileImage}\n          alt=\"Robert\"\n          src={avatar}\n        />\n        <div className={classes.content}>\n          <Typography component=\"h1\" variant=\"h4\">\n            {name}\n          </Typography>\n          <p>{username}</p>\n          <Button variant=\"outlined\" size=\"small\" fullWidth>\n            Edit profile\n          </Button>\n          <div className={classes.details}>\n            <p>\n            <br></br>\n            <PeopleAltOutlinedIcon></PeopleAltOutlinedIcon>&nbsp;{followers}&nbsp;followersãƒ»{following}&nbsp;following\n            </p>\n          </div>\n          <div className={classes.about}>\n            <p>\n              <LocationOnOutlinedIcon></LocationOnOutlinedIcon>&nbsp;{location}\n              <br></br>\n              <LinkIcon></LinkIcon>&nbsp;{blog}\n              <br></br>\n              <GitHubIcon></GitHubIcon>&nbsp;{id}\n            </p>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n    </Card>\n    </div>\n  );\n}","import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport MediaCard from \"./profile_card\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div> \n        { MediaCard() }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}